require('dotenv').config();
const {Bot, GrammyError, HttpError, Keyboard, InlineKeyboard} = require('grammy');
const { hydrate } = require('@grammyjs/hydrate');
// —Å–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
const bot = new Bot(process.env.BOT_API_KEY);
bot.use(hydrate());

// bot.on('msg:text', async (ctx) => {
//     await ctx.reply('–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö....—à—É—á—É –Ω–µ—É–º–µ—é –≤ —Å–ª–æ–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.')
// });

bot.on('message:voice', async (ctx) => {
    await ctx.reply('–ù–µ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞—é –∞—É–¥–∏–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤—å—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —á–µ–ª–æ–≤–µ–∫—É.')
});

bot.on('msg').filter((ctx) => {
    return ctx.from.id === 964408835
}, async (ctx) => {
    await ctx.reply('–î–æ–±—Ä—ã–π –¥–µ–Ω—å, –ê–ª–µ–∫—Å–∞–Ω–¥—Ä')
})

// bot.on(':media', async (ctx) => {
//     await ctx.reply('–§–∞–π–ª –ø–æ–ª—É—á–µ–Ω.–°–ø–∞—Å–∏–±–æ.–û–±—Ä–∞—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω–æ –≤ —Ä–∞–±–æ—Ç—É.')
// });

// –í—ã–≤–æ–¥ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–º–∞–Ω–¥ –≤ –º–µ–Ω—é
bot.api.setMyCommands([
    {
        command:'start', 
        description: '–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞',
    },
    {
        command:'hello',
        description: '–ü—Ä–∏–≤–µ—Ç—Å–≤–∏–µ',

    },
    {
        command: 'info',
        description: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'
    },
    {
        command: 'mood',
        description: '–ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ?'
    },
    {
        command: 'share',
        description: '–û—Å—Ç–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã , –ø—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å'
    },
    {
        command: 'menu',
        description: '–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞'
    },
]);

// —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–∏–≤—à–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏–µ
// bot.on('msg', async (ctx) => {
//     console.log(ctx.msg);
// })

// –ü—Ä–æ—Å–ª—É—à–∫–∏ –±–æ—Ç–∞
bot.hears(['id', 'ID', ], async (ctx) => {
    await ctx.reply(`–í–∞—à ID ${ctx.from.id}`);
})

bot.hears(['–ø–∏–Ω–≥', '–ü–∏–Ω–≥', '–°–Ω–æ–≤–∞ –ø–∏–Ω–≥', 'ping'], async (ctx) => {
    await ctx.reply('ping');
})
// –æ—Ç–≤–µ—Ç –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ
bot.hears([/–ø–∏–∑–¥–µ—Ü/, /—É—Ä–æ–¥/, /–±–ª—è–¥—å/, /–ë–ª—è–¥—å/, /—Ö—É–π/, /–•—É–π/, /–ø–∏–∑–¥–∞/, /–ø–∏–∑–¥–∞/], async (ctx) => {
    await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–µ —Ä—É–≥–∞–π—Ç–µ—Å—å. –î–∞–≤–∞–π—Ç–µ –≤–µ—Å—Ç–∏ —Å–µ–±—è –ø—Ä–∏–ª–∏—á–Ω–æ');
})

// –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
bot.command( ['say_hello', 'hello', 'say_hi'], async (ctx) => {
    await ctx.reply('–ü—Ä–∏–≤–µ—Ç, —á–µ–ª–æ–≤–µ–∫!', {
        reply_parameters: {message_id: ctx.msg.message_id}
    });
})

// –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –º—É–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
bot.hears('–•–æ—Ä–æ—à–æ' , async (ctx) => {
    await ctx.reply('–û—Ç–ª–∏—á–Ω–æ, —Ä–∞–¥ –∑–∞ –í–∞—Å. –î–∞–∂–µ –ø—É—â—É —Ä–∞–¥–æ—Å—Ç–Ω—É—é —Ä–æ–±–æ —Å–ª–µ–∑—É');
})

bot.hears('–ù–æ—Ä–º' , async (ctx) => {
    await ctx.reply('–í—ã –¥–µ—Ä–∂–∏—Ç–µ—Å—å —Å—Ç–æ–∏—á–µ—Å–∫–∏. –ü–æ–º–Ω–∏—Ç–µ –≤—Å–µ –≤—Ä–µ–º–µ–Ω–Ω–æ');
})

bot.hears('–ù–µ –æ–∫—ç–π' , async (ctx) => {
    await ctx.reply('–£–ª—ã–±–Ω–∏—Å—å —Å–∫–æ—Ä–æ –≤—Å–µ  –∏–∑–º–µ–Ω–∏—Ç—Å—è –∏ –±—É–¥–µ—Ç –æ–∫—ç–π');
})

bot.command('start', async(ctx) => {
    await ctx.reply('–Ø –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π –ù–∞–Ω–æ–±–∞–±–∞–π–∫–æ–π! :)', {
        reply_parameters: {message_id: ctx.msg.message_id}
    });
});

 

const menuKeyboard = new InlineKeyboard().text('–£–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞', 'order-status').text('–û–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É', 'support');
const backKeyboard = new InlineKeyboard().text('<–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', 'back');
 
bot.command('menu', async(ctx) => {
    await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –≤ –º–µ–Ω—é', {
        reply_markup: menuKeyboard,
    })
})

bot.callbackQuery('order-status', async (ctx) => {
    await ctx.callbackQuery.message.editText('–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: –í –æ–∂–∏–¥–∞–Ω–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏', {
        reply_markup: backKeyboard,
    })
    await ctx.answerCallbackQuery()
})

bot.callbackQuery('support', async (ctx) => {
    await ctx.callbackQuery.message.editText('–û–ø–∏—à–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ–±—Ä–∞—â–µ–Ω–∏—è', {
        reply_markup: backKeyboard,
    })
    await ctx.answerCallbackQuery()
})

bot.callbackQuery('back', async (ctx) => {
    await ctx.callbackQuery.message.editText('–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –≤ –º–µ–Ω—é', {
        reply_markup: menuKeyboard,
    })
    await ctx.answerCallbackQuery()
})

bot.command('info', async (ctx) => {
    await ctx.react('üëç')
    await ctx.reply('–ö–æ–Ω–µ—á–Ω–æ, –≤–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –º–æ–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ GIT: <a href="https://github.com/NanoBabaika?tab=repositories">—Å—Å—ã–ª–∫–∞</a>', {
        parse_mode: 'HTML'
    });
}) 



bot.command('share', async (ctx) => {
    const shareKeyboard = new Keyboard().requestLocation('–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –ì–µ–æ–ª–æ–∫–∞—Ü–∏–µ–π').requestContact('–û—Å—Ç–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã').requestPoll('–û–ø—Ä–æ—Å').placeholder('–û—Å—Ç–∞–≤—å—Ç–µ –í–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã').resized()

    await ctx.reply('–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É —á—Ç–æ –±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã –∏–ª–∏ –ø—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å', {
        reply_markup:shareKeyboard
    })
})

bot.on(':contact', async (ctx) => {
    await ctx.reply('–°–ø–∞—Å–∏–±–æ —Å–≤—è–∂–µ–º—Å—è —Å –í–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!')
})

 

// –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Å–æ–±—ã—Ç–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –º–æ–∂–Ω–æ –æ–±—ã—á–Ω—ã–º –º–µ—Ç–æ–¥–æ–º –±–æ—Ç —Å–ª—É—à–∞–µ—Ç (–≤—ã—à–µ)
bot.command("mood", async (ctx) => {
    const moodKeyboard = new Keyboard().text('–•–æ—Ä–æ—à–æ').row().text('–ù–æ—Ä–º').row().text('–ù–µ –æ–∫—ç–π').resized().oneTime()
    await ctx.reply('–ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ?', {
        reply_markup: moodKeyboard
    })
})

 
 

bot.catch( (err) => {
    const ctx = err.ctx;
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–æ—Ç–æ–º ${ctx.update.update_id}`);
    const e = err.error;

   if(e instanceof GrammyError) {
    console.error("–û—à–∏–±–∫–∞ –≤ –∑–∞–ø—Ä–æ—Å–µ:", e.description);
   } else if (e instanceof HttpError) {
    console.error("–ù–µ—Ç —Å–≤—è–∑–∏ —Å –¢–µ–ª–µ–≥—Ä–∞–º:", e);
   } else {
    console.error("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞", e)
   }
});

bot.start();

// https://www.youtube.com/watch?v=q-AFR0D7Vuw 52 :02